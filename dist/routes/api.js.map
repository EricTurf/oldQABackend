{"version":3,"sources":["../../app/routes/api.js"],"names":["mysql","require","connection","jwt","userData","EmailSender","TokenValidator","EmailValidator","exports","addQuestion","req","res","obj","body","question","json","success","message","query","table","format","err","rows","Message","getQuestions","Questions","compileAnswers","params","refID","email","subject","fname","lname","msg","i","length","answer","deleteQuestions","id","authUser","password","results","fields","Mesage","token","sign","expiresIn","getUserInfo","headers","vToken","username","createUser","validate","tempToken","validateUser"],"mappings":"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","file":"api.js","sourcesContent":["/**\n * http://usejsdoc.org/\n */\n\nvar mysql = require(\"mysql\");\nvar connection = require(\"./dbconnector\");\nvar jwt = require(\"jsonwebtoken\");\nvar userData = require(\"./userData\");\nvar EmailSender = require(\"./sendEmail\");\nvar TokenValidator = require(\"./tokenValidator\");\nvar EmailValidator = require(\"email-validator\");\n\nexports.addQuestion = function(req, res) {\n  var obj = req.body;\n\n  if (obj[0].question == null || obj[0].question == \"\") {\n    res.json({\n      success: false,\n      message:\n        \"One of the question fields was left blank. Please insert a question(s)\"\n    });\n  } else {\n    var query = \"INSERT INTO ??(??) VALUES (?)\";\n    var table = [\"interviewq\", \"question\", obj[0].question];\n    query = mysql.format(query, table);\n    connection.query(query, (err, rows) => {\n      if (err) {\n        res.json({\n          success: false,\n          Message: \"Error executing MySQL query\"\n        });\n      } else {\n        res.json({\n          success: true,\n          message: \"we have added your question(s).\"\n        });\n      }\n    }); // end of connection.query\n  }\n};\n\nexports.getQuestions = (req, res) => {\n  var query = \"SELECT * FROM ??\";\n  var table = [\"interviewq\"];\n  query = mysql.format(query, table);\n  connection.query(query, function(err, rows) {\n    if (err) {\n      res.json({\n        success: false,\n        Message: \"Error executing MySQL query\"\n      });\n    } else {\n      res.json({\n        success: true,\n        Questions: rows\n      });\n    }\n  }); // end of connection.query\n};\nexports.compileAnswers = function(req, res) {\n  userData(req.params.refID, function(err, email) {\n    if (err) {\n      res.json({\n        success: false,\n        message:\n          \"Could not retrieve the proper e-mail assosiated to this interview!\"\n      });\n    } else if (email) {\n      var obj = req.body;\n      var subject =\n        \"Interview conducted by \" + req.params.fname + \" \" + req.params.lname;\n\n      var msg = \"\";\n      for (var i = 0; i < obj.length; i++) {\n        msg += \"Question \" + (i + 1) + \": \" + obj[i].question + \"\\n\";\n        msg += \"Answer \" + (i + 1) + \": \" + obj[i].answer + \"\\n\";\n      }\n      EmailSender(email, subject, msg, function(err) {\n        if (err) {\n          res.json({\n            success: false,\n            message: err\n          });\n        } else {\n          res.json({\n            success: true,\n            message: \"Successfully submitted interview!\"\n          });\n        }\n      });\n    }\n  });\n};\nexports.deleteQuestions = function(req, res) {\n  if (req.params.id == null || req.params.id == \"\") {\n    res.json({\n      success: false,\n      message: \"No question selected for deletion\"\n    });\n  } else {\n    var query = \"DELETE FROM ?? WHERE??=?\";\n    var table = [\"interviewq\", \"id\", req.params.id];\n    query = mysql.format(query, table);\n    connection.query(query, function(err, rows) {\n      if (err) {\n        res.json({\n          success: false,\n          message: \"Error executing MySQL query\"\n        });\n      } else {\n        res.json({\n          success: true,\n          message: \"Succesfully deleted question(s)\"\n        });\n      }\n    }); //end of connection.query\n  }\n}; //end of delete\nexports.authUser = function(req, res) {\n  var query = \"SELECT * FROM ?? WHERE ?? = ?\";\n  var password = req.body.password;\n  var table = [\"users\", \"email\", req.body.email];\n  query = mysql.format(query, table);\n  connection.query(query, function(err, results, fields) {\n    if (err) {\n      res.json({\n        success: false,\n        Mesage: \"Error connecting to database\"\n      });\n    } else {\n      if (results.length > 0) {\n        if (results[0].password == password) {\n          var token = jwt.sign(\n            {\n              email: results[0].email\n            },\n            \"ilikepie\",\n            {\n              expiresIn: \"1h\"\n            }\n          );\n\n          res.json({\n            success: true,\n            Message: \"Logged in\",\n            token: token\n          });\n        } else {\n          res.json({\n            success: false,\n            Message: \"Invalid password\"\n          });\n        }\n      } else {\n        res.json({\n          success: false,\n          Message: \"Invalid username and password\"\n        });\n      }\n    }\n  });\n};\n\nexports.getUserInfo = function(req, res) {\n  var token = req.body.token || req.body.query || req.headers[\"x-access-token\"];\n  if (token) {\n    TokenValidator(token, function(err, vToken) {\n      if (err) {\n        res.json({\n          success: false,\n          message: err.message\n        });\n      } else {\n        res.json({\n          success: true,\n          message: \"Token validated\",\n          username: vToken.username\n        });\n      }\n    });\n  } else {\n    res.json({\n      success: false,\n      message: \"no token was provided.\"\n    });\n  }\n};\n\nexports.createUser = function(req, res) {\n  if (\n    req.body.email == null ||\n    req.body.email == \"\" ||\n    req.body.password == null ||\n    req.body.password == \"\"\n  ) {\n    res.json({\n      success: false,\n      message: \"Email and/or password was left empty!\"\n    });\n  } else if (!EmailValidator.validate(req.body.email)) {\n    res.json({\n      success: false,\n      message: \"Invalid email address. Please enter an actual email address\"\n    });\n  } else {\n    var query = \"INSERT INTO ??(??,??) VALUES (?,?)\";\n    var table = [\n      \"users\",\n      \"email\",\n      \"password\",\n      req.body.email,\n      req.body.password\n    ];\n    query = mysql.format(query, table);\n    connection.query(query, function(err, rows) {\n      if (err) {\n        res.json({\n          success: false,\n          message: \"SQL error\" + err\n        });\n      } else {\n        var tempToken = jwt.sign(\n          {\n            email: req.body.email\n          },\n          \"ilikepie\",\n          {\n            expiresIn: \"1h\"\n          }\n        );\n        if (tempToken) {\n          var subject =\n            \"Activation link for your QuestionApp account: \" + req.body.email;\n          var msg =\n            \"To activate your account, please click on the following link: https://radiant-lake-20483.herokuapp.com/activateUser/\" +\n            tempToken;\n          EmailSender(req.body.email, subject, msg, function(err) {\n            if (err) {\n              res.json({\n                success: false,\n                message: \"Problem encountered when sending email\",\n                token: tempToken\n              });\n            } else {\n              res.json({\n                success: true,\n                message: \"Activation link sent!\"\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n};\n\nexports.validateUser = function(req, res) {\n  var tempToken = req.params.token;\n  if (tempToken) {\n    TokenValidator(tempToken, function(err, vToken) {\n      if (err) {\n        res.json({\n          success: false,\n          message: \"Invalid link or your activation link is expired\"\n        });\n      } else {\n        var query = \"UPDATE ?? SET ??=? WHERE ?? = ?\";\n        var table = [\"users\", \"activated\", true, \"email\", vToken.email];\n        query = mysql.format(query, table);\n        connection.query(query, function(err, results, fields) {\n          if (err) {\n            res.json({\n              success: false,\n              message: \"SQL error\"\n            });\n          } else {\n            res.json({\n              success: true,\n              message: \"Your account has been validated\"\n            });\n          }\n        });\n      }\n    });\n  } else {\n    res.json({\n      success: false,\n      message: \"No token received\"\n    });\n  }\n};\n"]}